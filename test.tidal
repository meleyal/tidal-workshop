-- Patterns

d1 $ sound "bd(3,2) <cp sn:2>"
d2 $ n ("3 4 5*2") # sound "arpy"
hush



d1 $ sound "<bd bd:4> [<arpy:1 arpy:2 arpy:3 arpy:4>] <sd sd:3> [arpy:3 arpy:4 arpy:5 arpy:6 arpy:7 arpy:8]"
d1 $ sound "[bd bd bd, sd cp sd cp, arpy arpy, odx]"
d1 $ n "c e f g" # sound "superpiano"
d1 $ n (off 0.125 (+7) "c e f g") # sound "superpiano"
d1 $ jux rev $ n (off 0.25 (+12) $ off 0.125 (+7) "<c(3,8) <e5 g6>(3,8) f*2 g5(3,8)>") # sound "superpiano"
d1 $ loopAt 2 $ sound "arc" # gain 1.3
d2 $ sound "gabba(3,8)" # speed 2
cps 10
hush

-- Chords

d1 $ n ("0" + "[0,12,7]") # sound "superpiano"
d1 $ n ("c" +  chord "major") # sound "superpiano"
d1 $ n ("c a" +  chord "major minor") # sound "superpiano"

d1 $ slow 4 $ n (off 0.25 (+ chord "major major") "c(3,8) a(3,8)") # sound "superpiano"
hush

-- Scales

d1 $ n ("0 .. 7") # sound "superpiano"
d1 $ n (scaleP "majPent" "0 .. 7") # sound "superpiano"

d1 $ weave 4 (n (scaleP "majPent" "0 .. 14") # sound "superpiano")
   [vowel "a e i"]

d1 $ weave 16 (pan saw)
   [sound "bd(3,8)",
    sound "cp(5,8)"
   ]
hush


-- Transformations

d1 $ iter 4 $ n "0 .. 7" # sound "arpy"
d1 $ iter' 4 $ loopAt 4 $ chop 16 $ sound "paper"
hush

-- Syntax

-- $ dollar
d1 sound "bd sn"
d1(sound("bd sn"))
d1 (sound "bd sn")
d1 $ sound "bd sn"
d1 $ rev $ sound "bd sn" -- $ is replacement for parens
d1 $ every 4 (fast 4) $ (sound "bd sn")
d1 $ every 4 (fast 4) $ sound "bd sn" -- $ $ works as shorthand but only with single arg

-- # hash
d1 $ n "{0 5 7 12, 0 12 [2 5]}" # sound "superpiano" -- joining patterns to form new ones

-- see type signature
:t every
:t fast
:t rev -- rev :: Pattern a -> Pattern a
:t jux -- jux :: (ParamPattern -> Pattern ParamMap) -> ParamPattern -> Pattern ParamMap

-- channels

d1 $ n "0 7 12 7" # sound "superpiano" |+| n "<0 12>"
d2 $ sound "bd(3,2) sn(2,8)"
d1 $ sound "bd sn:2" # vowel "<a e i o u>"
d2 $ slow 3 $ vowel "a i u" # sound "feel"
d3 $ slow 2 $ n "[c ~ e ~ g ~]/2" # sound "bass"
d4 $ sound "jazz(2,9)" |+| n "<0 12>"
hush
silence

-- fx/orbits

d1 $ sound "sd(3,8)"
   # room 0.9
   # size 0.9
   # orbit 1 -- like an aux/send channel

d2 $ n "0 .. 7" # sound "arpy*8"
   # orbit 0
   # delay 0.9
   # delaytime 0.05
   # delayfb 0.9

-- misc

d1 $ jux rev $ n (off 0.25 (+ chord "minor") $ "<c a f e>(3,8)")
   # sound "supermandolin"
   # legato 4

hush
